
" ======================================
" Champok Das .vimrc file
" ======================================
"
"
let mapleader=" "
nnoremap <leader>c :noh<CR>

map <F3> <Esc>:set guifont=*<CR>
" What the fuck is Ex mode?
nnoremap Q <nop>
nnoremap gy gT
" I like seeing where I came from
map <PageDown> <C-d>zz
map <PageUp> <C-u>zz
imap <PageDown> <C-o><C-d><C-o>zz
imap <PageUp> <C-o><C-u><C-o>zz
nnoremap G Gzz
nnoremap gf <C-w>vgf

" Quicker window movement in normal mode
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

"nnoremap <tab> %
"vnoremap <tab> %


" Pesky little tabs can't hind from me anymore
set list
set listchars=tab:\ \ ,trail:·,extends:>

" Bing bang <silent>
set noerrorbells
set novisualbell

" Some say numbers are for noobs
set number
" Well I say you haven't felt RELATIVE NUMBERS YET
set rnu

" We're not in the 90's anymore old man
set textwidth=150
set ruler
set cursorline " OK fine, I might be a little blind

" Who doesn't like to search things
set hlsearch
set smartcase
set ignorecase
set incsearch
set showmatch

set autoindent

" Tabs are evil
set expandtab
set shiftwidth=2
set smartindent
set smarttab
set softtabstop=2

" But vim tabs are nice sometimes
set tabpagemax=100

" I forget where I am sometimes
set statusline=<<\ %f%m\ >>%r%h%w
set statusline+=[%{&ff}]
set statusline+=%=
set statusline+=\ %P
set statusline+=[%03.3b/\%02.2B]\ [POS=%04v]

set laststatus=2
set showtabline=2

" When you need to yank it
" But things just get in the way
set nowrap

" Make back space great again (or really backspace more modern
set backspace=indent,eol,start

" IDK what these do, but I steal em anyway
set showmode
set lazyredraw
set cursorline
set numberwidth=6
" Stole this one from Kevin to also save my pinky
nmap ; :

set nocompatible

set tags=./tags;/

if (has("nvim"))
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
if (has("termguicolors"))
  " Sometimes may need to use this in when using PuTTy + tmux
  " set Vim-specific sequences for RGB colors
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

syntax on
set title
set titleold=
filetype on
filetype plugin indent on

set swapfile
set dir=/tmp

" Vundle stuff
set rtp+=~/.vim/bundle/Vundle.vim
try
  call vundle#begin()

  Plugin 'VundleVim/Vundle.vim'
  Plugin 'preservim/nerdtree'
  Plugin 'joshdick/onedark.vim'
  Plugin 'sheerun/vim-polyglot'
  call vundle#end()
catch /^Vim\%((\a\+)\)\=:E117/
  " Do nothing
 endtry

try
  colorscheme onedark
catch /^Vim\%((\a\+)\)\=:E185/
  colorscheme desert
endtry

let g:jedi#use_splits_not_buffers="right"
let g:jedi#popup_select_first=0
let g:jedi#show_call_signatures=1
let g:multi_cursor_quit_key = '<Esc>'

if exists("NERDTreeTogge")
  map<C-o> :NERDTreeToggle<CR>
endif

autocmd FileType python setlocal completeopt-=preview
if exists("NERDTree")
  autocmd VimEnter * NERDTree " open NERDTree on startup
  autocmd VimEnter * wincmd w " jump to active window on startup
endif

autocmd VimResized * wincmd *
let NERDTreeShowHidden=1 " always show hidden files

function! GetMatches(line1, line2, pattern)
  let hits = []
  for line in range(a:line1, a:line2)
    let text = getline(line)
    let from = 0
    while 1
      let next = match(text, a:pattern, from, 1)
      if next < 0
        break
      endif
      let from = matchend(text, a:pattern, from, 1)
      if from > next
        call add(hits, strpart(text, next, from - next))
      else
        let char = matchstr(text, '.', next)
        if empty(char)
          break
        endif
        let from = next + strlen(char)
      endif
    endwhile
  endfor
  return hits
endfunction

set wildmenu
set wildmode=list:longest
"set wildmenu=longest:list,full
set wildignore+=*.o,*.obj,*~
set wildignore+=*vim/backups*

set history=1000
set diffopt+=vertical
"set splitbelow
set splitright

set cc=80,120,150
set modelines=0
set gdefault

function GenTags()
  let curPath = g:NERDTree.ForCurrentTab().getRoot().path.str()
  exec ':!ctags --extra=+f -R -f ' . curPath . '/tags ' . curPath
endfunction


"Glorified lidl buffer renumbering
nmap <silent> <leader>r :argdel *<CR>:bufdo argadd %<CR>:%bd<CR>:argdo e<CR><CR>:b 1<CR>

nmap <silent> <F1> :call GenTags()<CR>

let g:jedi#use_splits_not_buffers="right"
let g:jedi#popup_select_first=0
let g:jedi#show_call_signatures=1
let g:multi_cursor_quit_key = '<Esc>'

if !empty(glob("~/.vim/bundle/nerdtree"))
  map<leader>o :NERDTreeToggle<CR>
else
  map<leader>o :Lex<CR>
endif

au InsertEnter * hi statusline guifg=black guibg=#d7afff ctermfg=black ctermbg=magenta
au InsertLeave * hi statusline guifg=black guibg=#8fbfdc ctermfg=black ctermbg=cyan
hi statusline guifg=black guibg=#8fbfdc ctermfg=black ctermbg=cyan

" Status line
" default: set statusline=%f\ %h%w%m%r\ %=%(%l,%c%V\ %=\ %P%)

" Status Line Custom
let g:currentmode={
    \ 'n'  : 'Normal',
    \ 'no' : 'NormalÂ·Operator Pending',
    \ 'v'  : 'Visual',
    \ 'V'  : 'VÂ·Line',
    \ '^V' : 'VÂ·Block',
    \ 's'  : 'Select',
    \ 'S'  : 'SÂ·Line',
    \ '^S' : 'SÂ·Block',
    \ 'i'  : 'Insert',
    \ 'R'  : 'Replace',
    \ 'Rv' : 'VÂ·Replace',
    \ 'c'  : 'Command',
    \ 'cv' : 'Vim Ex',
    \ 'ce' : 'Ex',
    \ 'r'  : 'Prompt',
    \ 'rm' : 'More',
    \ 'r?' : 'Confirm',
    \ '!'  : 'Shell',
    \ 't'  : 'Terminal'
    \}

set laststatus=2
set statusline=
set statusline+=%0*\ %n\                                 " Buffer number
set statusline+=%1*\ %{getcwd()}\ \|
set statusline+=%1*\ %<%f%m%r%h%w\                       " File path, modified, readonly, helpfile, preview
set statusline+=%3*|‚                                    " Separator
set statusline+=%2*\ %Y\                                 " FileType
set statusline+=%3*|‚                                    " Separator
set statusline+=%2*\ %{''.(&fenc!=''?&fenc:&enc).''}     " Encoding
set statusline+=\ (%{&ff})                               " FileFormat (dos/unix..)
set statusline+=%=                                       " Right Side
set statusline+=%2*\ C:%02v                              " Colomn number
set statusline+=%3*|                                     " Separator
set statusline+=%1*\ %02l/%L\                            " Line number / total lines, percentage of document
set statusline+=%0*\ %{toupper(g:currentmode[mode()])}\  " The current mode

hi User1 cterm=bold ctermfg=White ctermbg=239 guibg=#4e4e4e guifg=#adadad
hi User2 ctermfg=007 ctermbg=236 guibg=#303030 guifg=#adadad
hi User3 ctermfg=236 ctermbg=236 guibg=#303030 guifg=#303030
hi User4 ctermfg=239 ctermbg=239 guibg=#4e4e4e guifg=#4e4e4e

set clipboard=unnamedplus

set path+=**

set modelines=0
set gdefault
set undodir=~/.vim/undo/
set undofile
